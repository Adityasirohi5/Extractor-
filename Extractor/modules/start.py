import re
import random
from pyrogram import filters
from Extractor import app
from Extractor.core import script
from pyrogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton



# ------------------------------------------------------------------------------- #

buttons = InlineKeyboardMarkup([
                [
                  InlineKeyboardButton("·¥ç·¥è·¥Ö·¥ás", callback_data="modes_")
                ],[
                  InlineKeyboardButton("·¥Ñ ú·¥Ä…¥…¥·¥á ü", url="https://t.me/DevsCreations"),
                  InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/DevsOops")
                ]])


modes_button = [[
                  InlineKeyboardButton("·¥Ñ·¥ús·¥õ·¥è·¥ç", callback_data="custom_"),
                  InlineKeyboardButton("·¥ç·¥Ä…¥·¥ú·¥Ä ü", callback_data="manual_"),
                ],[
                  InlineKeyboardButton("ùêÅ ùêÄ ùêÇ ùêä", callback_data="home_")
                ]]


course_button = [              
                [
                    InlineKeyboardButton("ss·¥Ñ ·¥ç·¥Ä·¥ã·¥á Ä", callback_data="ss_maker"),   
                    InlineKeyboardButton("·¥ò·¥á Ä“ì·¥á·¥Ñ·¥õ ·¥Ä·¥Ñ·¥Ä·¥Ö·¥á·¥ç è", callback_data="perfect_acc"),
                ],
                [
                    InlineKeyboardButton("·¥Ñ ü·¥Äss·¥ò ü·¥ús", callback_data="classplus_"),   
                    InlineKeyboardButton("·¥á1 ·¥Ñ·¥è·¥Ä·¥Ñ ú…™…¥…¢", callback_data="e1_coaching"),     
                ],
                [
                    InlineKeyboardButton("s·¥Ä·¥ç è·¥Ä·¥ã  Ä·¥Äs", callback_data="samyak_ras"),   
                    InlineKeyboardButton("·¥†·¥ä ·¥á·¥Ö·¥ú·¥Ñ·¥Ä·¥õ…™·¥è…¥", callback_data="vj_education"),              
                ],
                [
                    InlineKeyboardButton("…¢ è·¥Ä…¥  ô…™…¥·¥Ö·¥ú", callback_data="gyan_bindu"),   
                    InlineKeyboardButton("·¥Ö ú·¥Ä…¥·¥Ä…¥·¥ä·¥Ä è …™·¥Äs", callback_data="dhananjay_ias"),                   
                ],
                [
                    InlineKeyboardButton("·¥õ ú…™…¥·¥ã ss·¥Ñ", callback_data="think_ssc"),   
                    InlineKeyboardButton("·¥Äs ú…™s ú s…™…¥…¢  ü·¥á·¥Ñ.", callback_data="Ashish_lec"),                    
                ],
                [
                    InlineKeyboardButton("·¥õ·¥ú·¥õ·¥è Äs ·¥Ä·¥Ö·¥Ö·¥Ä", callback_data="tutors_adda"),   
                    InlineKeyboardButton("…¥…™·¥ç…™s ú·¥Ä  ô·¥Ä…¥s·¥Ä ü", callback_data="nimisha_bansal"),          
                ],
                [
                    InlineKeyboardButton("Ôπ§", callback_data="next_3"),
                    InlineKeyboardButton(" ô ·¥Ä ·¥Ñ ·¥ã", callback_data="modes_"),
                    InlineKeyboardButton("Ôπ•", callback_data="next_1")
                ]
                ]


course_button1 = [
                [
                    InlineKeyboardButton("s·¥Ä·¥Ñ ú…™…¥ ·¥Ä·¥Ñ·¥Ä·¥Ö·¥á·¥ç è", callback_data="sachin_acc"),   
                    InlineKeyboardButton("·¥Ä·¥Ñ ú·¥Ä Ä è·¥Ä ·¥Ñ ü·¥Äss·¥ás", callback_data="acharya_classes"),
                ],
                [
                    InlineKeyboardButton("·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥ò ü·¥ús", callback_data="target_plus"),   
                    InlineKeyboardButton(" Ä·¥°·¥Ä", callback_data="rwa_"),
                ],
                [
                    InlineKeyboardButton("·¥°…™…¥…¥·¥á Äs", callback_data="winners_"),   
                    InlineKeyboardButton("·¥è·¥Ñ·¥á·¥Ä…¥ …¢·¥ú Ä·¥ú·¥ã·¥ú ü", callback_data="ocean_gurukul"),     
                ],
                [
                    InlineKeyboardButton("·¥ç…¢ ·¥Ñ·¥è…¥·¥Ñ·¥á·¥ò·¥õ", callback_data="mg_concept"),   
                    InlineKeyboardButton(" è·¥è·¥Ö ú·¥Ä", callback_data="yodha_"),              
                ],
                [
                    InlineKeyboardButton("…¥·¥è·¥õ·¥á  ô·¥è·¥è·¥ã", callback_data="note_book"),   
                    InlineKeyboardButton("·¥ú·¥Ñ  ü…™·¥†·¥á", callback_data="uc_live"),      
                ],
                [
                    InlineKeyboardButton("s·¥ò·¥Ä·¥Ñ·¥á …™·¥Äs", callback_data="space_ias"),   
                    InlineKeyboardButton(" Ä…¢ ·¥†…™·¥ã Ä·¥Ä·¥ç·¥ä·¥á·¥á·¥õ", callback_data="rg_vikramjeet"),       
                ],
                [
                    InlineKeyboardButton("Ôπ§", callback_data="manual_"),
                    InlineKeyboardButton(" ô ·¥Ä ·¥Ñ ·¥ã", callback_data="modes_"),
                    InlineKeyboardButton("Ôπ•", callback_data="next_2")
                ]
                ]



course_button2 = [              
                [   
                    InlineKeyboardButton("·¥†…™·¥Ö è·¥Ä  ô…™ ú·¥Ä Ä", callback_data="vidya_bihar"),
                    InlineKeyboardButton("·¥Ä·¥ç·¥Ä…¥ s…™ Ä", callback_data="aman_sir")
                ],
                [   
                    InlineKeyboardButton("…¥…™ Ä·¥ç·¥Ä…¥ …™·¥Äs", callback_data="nirman_ias"),
                    InlineKeyboardButton("·¥ò·¥á Ä·¥ç·¥Ä Ä ss·¥Ñ", callback_data="permar_ssc")
                ],
                [
                    InlineKeyboardButton("…¥·¥á·¥è s·¥ò·¥Ä Ä·¥ã", callback_data="neo_spark"),
                    InlineKeyboardButton("·¥ç·¥Ö ·¥Ñ ü·¥Äss·¥ás", callback_data="md_classes")
                ],
                [   
                    InlineKeyboardButton("…¥…¢  ü·¥á·¥Ä Ä…¥·¥á Äs", callback_data="ng_learners"),
                    InlineKeyboardButton("ss·¥Ñ …¢·¥ú Ä·¥ú·¥ã·¥ú ü", callback_data="ssc_gurukul")
                ],
                [
                    InlineKeyboardButton("·¥Ä Ä·¥ç è s·¥õ·¥ú·¥Ö è  ü…™·¥†·¥á", callback_data="army_study"),
                    InlineKeyboardButton("s·¥Ä…¥·¥ã·¥Ä ü·¥ò", callback_data="sankalp_")
                ],
                [              
                    InlineKeyboardButton("·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥ú·¥òs·¥Ñ", callback_data="target_upsc"),
                    InlineKeyboardButton("…¢·¥ã ·¥Ñ·¥Ä“ì·¥á", callback_data="gk_cafe")
                ],
                [
                    InlineKeyboardButton("Ôπ§", callback_data="next_1"),
                    InlineKeyboardButton(" ô ·¥Ä ·¥Ñ ·¥ã", callback_data="modes_"),
                    InlineKeyboardButton("Ôπ•", callback_data="next_3")
                ]
                ]



course_button3 = [              
                [   
                    InlineKeyboardButton("·¥Ñ·¥Ä Ä·¥á·¥á Ä·¥°…™ ü ü", callback_data="maintainer_"),
                    InlineKeyboardButton("·¥ã ú·¥Ä…¥", callback_data="maintainer_")
                ],
                [   
                    InlineKeyboardButton("·¥ò ú ès…™·¥Ñs ·¥°·¥Ä ü ü·¥Ä ú", callback_data="maintainer_"),
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_")
                ],
                [
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_"),
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_")
                ],
                [   
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_"),
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_")
                ],
                [
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_"),
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_")
                ],
                [              
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_"),
                    InlineKeyboardButton("s·¥è·¥è…¥", callback_data="maintainer_")
                ],
                [
                    InlineKeyboardButton("Ôπ§", callback_data="next_2"),
                    InlineKeyboardButton(" ô ·¥Ä ·¥Ñ ·¥ã", callback_data="modes_"),
                    InlineKeyboardButton("Ôπ•", callback_data="manual_")
                ]
                ]




back_button  = [[
                    InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data="modes_"),                    
                ]]



# ------------------------------------------------------------------------------- #




@app.on_message(filters.command("start"))
async def start(_,message):
  await message.reply_photo(photo=random.choice(script.IMG), 
                            caption=script.START_TXT.format(message.from_user.mention),
                            reply_markup=buttons)








#@app.on_callback_query(re.compile(r"^(home_|modes_|custom_|manual_|maintainer_|close_data|next_1|next_2|next_3.+)$"))
@app.on_callback_query()
async def handle_callback(_, query):

    if query.data=="home_":        
        
        await query.message.edit_text(
              script.START_TXT.format(query.from_user.mention),
              reply_markup=buttons
            )
        
    elif query.data=="modes_":        
        reply_markup = InlineKeyboardMarkup(modes_button)
        await query.message.edit_text(
              script.MODES_TXT,
              reply_markup=reply_markup)
        
        
    elif query.data=="custom_":        
        reply_markup = InlineKeyboardMarkup(back_button)
        await query.message.edit_text(
              script.CUSTOM_TXT,
              reply_markup=reply_markup
            )
        
        
    elif query.data=="manual_":        
        reply_markup = InlineKeyboardMarkup(course_button)
        await query.message.edit_text(
              script.MANUAL_TXT,
              reply_markup=reply_markup
            )
      
    elif query.data=="next_1":        
        reply_markup = InlineKeyboardMarkup(course_button1)
        await query.message.edit_text(
              script.MANUAL_TXT,
              reply_markup=reply_markup
            )
      
    elif query.data=="next_2":        
        reply_markup = InlineKeyboardMarkup(course_button2)
        await query.message.edit_text(
              script.MANUAL_TXT,
              reply_markup=reply_markup
            )
      
    elif query.data=="next_3":        
        reply_markup = InlineKeyboardMarkup(course_button3)
        await query.message.edit_text(
              script.MANUAL_TXT,
              reply_markup=reply_markup
            )

          
        
    elif query.data=="maintainer_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)



  
  
    elif query.data=="ss_maker":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="perfect_acc":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="classplus_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="e1_coaching":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="samyak_ras":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="vj_education":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="gyan_bindu":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="dhananjay_ias":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="think_ssc":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="Ashish_lec":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="tutors_adda":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="nimisha_bansal":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="sachin_acc":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="acharya_classes":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="target_plus":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="rwa_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="winners_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="ocean_gurukul":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="mg_concept":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="yodha_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
 
    elif query.data=="note_book":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="uc_live":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="space_ias":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="rg_vikramjeet":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="vidya_bihar":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="aman_sir":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="nirman_ias":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="permar_ssc":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="neo_spark":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="md_classes":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="ng_learners":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="ssc_gurukul":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="army_study":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="sankalp_":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="target_upsc":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    elif query.data=="gk_cafe":     
        await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)
    






    elif query.data=="close_data":
        await query.message.delete()
        await query.message.reply_to_message.delete()



